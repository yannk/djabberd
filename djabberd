#!/usr/bin/perl

use strict;
use lib 'lib';
use DJabberd;
use DJabberd::Authen::AllowedUsers;
use DJabberd::Authen::StaticPassword;

use DJabberd::Delivery::Local;
use DJabberd::Delivery::S2S;

use DJabberd::PresenceChecker::Local;

use DJabberd::RosterStorage::SQLite;
use DJabberd::RosterStorage::Dummy;
use DJabberd::RosterStorage::LiveJournal;


use Getopt::Long;

use vars qw($DEBUG);
$DEBUG = 0;

my ($daemonize);

Getopt::Long::GetOptions(
    'd|daemon'       => \$daemonize,
    'debug=i'        => \$DEBUG,
   );

use FindBin qw($Bin);

my $vhost = DJabberd::VHost->new(
                                 server_name => 'jabber.bradfitz.com',
                                 require_ssl => 0,
                                 plugins   => [
                                               DJabberd::Authen::AllowedUsers->new(policy => "deny",
                                                                                   allowed => [qw(brad daveman692 crucially bradfitz bob test revmischa)]),
                                               DJabberd::Authen::StaticPassword->new(password => "password"),
                                               DJabberd::PresenceChecker::Local->new(),
                                               DJabberd::Delivery::Local->new(),
                                               DJabberd::Delivery::S2S->new(),
                                               DJabberd::RosterStorage::SQLite->new("$Bin/roster.sqlite"),
                                               #DJabberd::RosterStorage::Dummy->new,
                                               #DJabberd::RosterStorage::LiveJournal->new,
                                               ],
                                 );

my $server = DJabberd->new(
                           #server_name => '207.7.148.210',
                           daemonize => $daemonize,
                           s2s       => 1,
                           old_ssl   => 1,
                           );
$server->add_vhost($vhost);

$server->run;
