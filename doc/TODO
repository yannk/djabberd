-- if a@foo.com/Home and a@foo.com/Work are both connected, subscribed to b@foo.com,
   presence changes of b@foo.com don't go to both a's /Home and /Work resources.  it's
   kinda random.  likewise with messages to only a@foo.com:  SHOULD go to all.
   this starts to get into cluster-wide delivery.

-- cleanup/unifiy callbacks.... error vs. fail, on_data vs set vs loaded, etc...
  give them types?

-- debian install guide.

-- debian packaging

-- make SSL configuration easier:  configurable locations of keys,
   and bitch if configured and not configured

-- $stanza->process and $stanza->deliver take a $conn, but
   now that stanzas always know their connection, that
   parameter is kinda useless.  remove them all?
     -- actually, we should also store a non-weak vhost ref
        in stanzas, then use that for delivery/etc, since
        conn as a weakref can go away if client disconnects
        and we may still want to process/deliver.

-- Jingle/Asterisk stuff:

   This Jabber client supports Jingle:
     http://www.kismith.co.uk/wordpress/index.php/2005/12/16/i-say-i-say-i-say-did-you-hear-the-one-about/
     http://psi-im.org/wiki/Jingle_branch
   So think we could do the Jingle stuff Jabber-server-side and get the Psi
   client connecting to Asterisk over SIP or something?

-- speed up XMLElement as_xml ... try to reuse the original scalarref read from the network, if
   we can align the boundaries of XML stanzas to network reads.  XML::Parser::Expat can help
   us:  (where $self->{parser} is our incremental parser), but we're using LibXML now.

    print Dumper("eobj = " . eval { $self->{parser}->_expat_obj->current_byte });
    $VAR1 = 'eobj = 22';

-- when a server goes away, we still have a queue for it and don't reestablish connections with it
   send message from server a to server b, kill server a, start it again
   now messages can from a to b but not from b to a

-- <not-authorized/> -- the sender must provide proper credentials
      before being allowed to perform the action, or has provided
      improper credentials; the associated error type SHOULD be "auth".   no error currently gets sent on non AUTH

-- seems to be a bug doing s2s dialback to Wildfire. Cursory debugging suggests it's
  Wildfire's fault, not including the vhost in its stream element; it includes it
  in the "verify" element, though. Is that supposed to work? Debug log:

DEBUG DJabberd.Delivery.S2S                    s2s delivery attempt for whatever@loquat.localdomain
DEBUG DJabberd.Queue.ServerOut                 Starting connection to domain 'loquat.localdomain'
DEBUG DJabberd.DNS                             pkt = Net::DNS::Packet=HASH(0x8d6a0d4)
DEBUG DJabberd.DNS                             sock = IO::Socket::INET=GLOB(0x8d7097c)
DEBUG DJabberd.Queue.ServerOut                 Resolver callback for 'loquat.localdomain': [DJabberd::IPEndPoint=HASH(0x8d6d2b0)]
DEBUG DJabberd.Connection.ServerOut            New connection '12' from 10.1.2.7
DEBUG DJabberd.Connection.ServerOut            Connecting to '10.1.2.7' for 'loquat.localdomain'
DEBUG DJabberd.Queue.ServerOut                 Set connection for queue to 'loquat.localdomain' to connection '12'
INFO  DJabberd.Connection.XML.ServerOut        12 > <?xml version="1.0" encoding="UTF-8"?><stream:stream to='loquat.localdomain' xmlns:stream='http://etherx.jabber.org/streams' xmlns='jabber:server' xml:lang='en' xmlns:db='jabber:server:dialback' version='1.0'>
DEBUG DJabberd.Connection.ServerOut            12 parsing 133 bytes...
DEBUG DJabberd.Connection.ServerOut            We got a stream back from connection 12!

DEBUG DJabberd.Connection.ServerOut            Connection 12 supports dialback
INFO  DJabberd.DialbackParams                  Generating diablack result for vhost s8n.me.uk
DEBUG DJabberd.DialbackParams                  Generated dialback result '[...]' using secret [...]
DEBUG DJabberd.Connection.ServerOut            12 sending res [...]
DEBUG DJabberd.Connection.ServerIn             New connection '13' from 192.168.2.7
DEBUG DJabberd.Connection.ServerIn             13 parsing 119 bytes...
INFO  DJabberd.Connection.XML.ServerIn         13 > <?xml version="1.0" encoding="UTF-8"?><stream:stream  id="d24a220587269c83ea0cf693a468778689121282"  xmlns:db='jabber:server:dialback' xmlns:stream="http://etherx.jabber.org/streams" xmlns="jabber:server">
DEBUG DJabberd.Connection.ServerIn             13 parsing 113 bytes...
INFO  DJabberd.Connection.XML.ServerIn         13 < <verify xmlns='jabber:server:dialback' from='loquat.localdomain' id='41c13a4e' to='s8n.me.uk'>...</verify>
DEBUG DJabberd.Stanza.DialbackVerify           Procesing dialback verify for connection 13
ERROR DJabberd.Connection.ServerIn             13 disconnected DJabberd::Connection::ServerIn=ARRAY(0x8d6e38c) because: No 'vhost' field at lib/DJabberd/Stanza/DialbackVerify.pm line 19

WARN  DJabberd.Connection.ServerIn             13 parsing *****
<db:verify from="loquat.localdomain" to="s8n.me.uk" id="41c13a4e">i-66a29a9c84df8f5efd78e443166812c9ed256ea0</db:verify>
*******

DEBUG DJabberd.Connection.ServerIn             DISCONNECT: 13


